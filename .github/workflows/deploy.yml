# 워크플로우의 이름
name: Java CI/CD with Gradle

# 워크플로우가 실행될 조건 (트리거)
on:
  push:
    branches: [ "main" ] # "main" 브랜치에 push가 발생했을 때 실행

# 워크플로우가 수행할 작업(들)
jobs:
  # 빌드 및 배포를 하나의 작업으로 통합
  build-and-deploy:
    # 실행될 가상 서버 환경 지정
    runs-on: ubuntu-latest

    # 작업 단계들
    steps:
      # 1. 소스코드 체크아웃 (가져오기)
      - name: Checkout
        uses: actions/checkout@v4

      # 2. JDK 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Gradle 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4. Gradle 빌드 (테스트 제외)
      - name: Build with Gradle
        run: ./gradlew build -x test

      # 5. 빌드된 JAR 파일을 EC2 서버로 전송
      - name: Transfer JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.ACTIONS_RUNNER_PRIVATE_KEY }}
          source: "build/libs/*.jar" # 빌드된 모든 jar 파일
          target: "~/app" # EC2 서버의 홈 디렉터리 아래 app 폴더

      # 6. EC2 서버에서 배포 스크립트 실행
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.ACTIONS_RUNNER_PRIVATE_KEY }}
          script: |
            ./deploy.sh